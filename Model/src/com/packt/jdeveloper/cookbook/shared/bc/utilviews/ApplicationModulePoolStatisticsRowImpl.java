package com.packt.jdeveloper.cookbook.shared.bc.utilviews;


import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;

//import oracle.sql.REF;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 04 14:34:48 IST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ApplicationModulePoolStatisticsRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        PoolName,
        ApplicationModuleClass,
        AvailableInstanceCount,
        InitPoolSize,
        InstanceCount,
        MaxPoolSize,
        NumOfStateActivations,
        NumOfStatePassivations,
        NumOfInstancesReused,
        RefInstancesRecycled,
        UnrefInstancesRecycled,
        ReferencedApplicationModules,
        NumOfSessions,
        AvgNumOfSessionsRefState;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POOLNAME = AttributesEnum.PoolName.index();
    public static final int APPLICATIONMODULECLASS = AttributesEnum.ApplicationModuleClass.index();
    public static final int AVAILABLEINSTANCECOUNT = AttributesEnum.AvailableInstanceCount.index();
    public static final int INITPOOLSIZE = AttributesEnum.InitPoolSize.index();
    public static final int INSTANCECOUNT = AttributesEnum.InstanceCount.index();
    public static final int MAXPOOLSIZE = AttributesEnum.MaxPoolSize.index();
    public static final int NUMOFSTATEACTIVATIONS = AttributesEnum.NumOfStateActivations.index();
    public static final int NUMOFSTATEPASSIVATIONS = AttributesEnum.NumOfStatePassivations.index();
    public static final int NUMOFINSTANCESREUSED = AttributesEnum.NumOfInstancesReused.index();
    public static final int REFINSTANCESRECYCLED = AttributesEnum.RefInstancesRecycled.index();
    public static final int UNREFINSTANCESRECYCLED = AttributesEnum.UnrefInstancesRecycled.index();
    public static final int REFERENCEDAPPLICATIONMODULES = AttributesEnum.ReferencedApplicationModules.index();
    public static final int NUMOFSESSIONS = AttributesEnum.NumOfSessions.index();
    public static final int AVGNUMOFSESSIONSREFSTATE = AttributesEnum.AvgNumOfSessionsRefState.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ApplicationModulePoolStatisticsRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PoolName.
     * @return the PoolName
     */
    public String getPoolName() {
        return (String) getAttributeInternal(POOLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoolName.
     * @param value value to set the  PoolName
     */
    public void setPoolName(String value) {
        setAttributeInternal(POOLNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ApplicationModuleClass.
     * @return the ApplicationModuleClass
     */
    public String getApplicationModuleClass() {
        return (String) getAttributeInternal(APPLICATIONMODULECLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplicationModuleClass.
     * @param value value to set the  ApplicationModuleClass
     */
    public void setApplicationModuleClass(String value) {
        setAttributeInternal(APPLICATIONMODULECLASS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvailableInstanceCount.
     * @return the AvailableInstanceCount
     */
    public Number getAvailableInstanceCount() {
        return (Number) getAttributeInternal(AVAILABLEINSTANCECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailableInstanceCount.
     * @param value value to set the  AvailableInstanceCount
     */
    public void setAvailableInstanceCount(Number value) {
        setAttributeInternal(AVAILABLEINSTANCECOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InitPoolSize.
     * @return the InitPoolSize
     */
    public Number getInitPoolSize() {
        return (Number) getAttributeInternal(INITPOOLSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InitPoolSize.
     * @param value value to set the  InitPoolSize
     */
    public void setInitPoolSize(Number value) {
        setAttributeInternal(INITPOOLSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InstanceCount.
     * @return the InstanceCount
     */
    public Number getInstanceCount() {
        return (Number) getAttributeInternal(INSTANCECOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InstanceCount.
     * @param value value to set the  InstanceCount
     */
    public void setInstanceCount(Number value) {
        setAttributeInternal(INSTANCECOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MaxPoolSize.
     * @return the MaxPoolSize
     */
    public Number getMaxPoolSize() {
        return (Number) getAttributeInternal(MAXPOOLSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MaxPoolSize.
     * @param value value to set the  MaxPoolSize
     */
    public void setMaxPoolSize(Number value) {
        setAttributeInternal(MAXPOOLSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NumOfStateActivations.
     * @return the NumOfStateActivations
     */
    public Number getNumOfStateActivations() {
        return (Number) getAttributeInternal(NUMOFSTATEACTIVATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumOfStateActivations.
     * @param value value to set the  NumOfStateActivations
     */
    public void setNumOfStateActivations(Number value) {
        setAttributeInternal(NUMOFSTATEACTIVATIONS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NumOfStatePassivations.
     * @return the NumOfStatePassivations
     */
    public Number getNumOfStatePassivations() {
        return (Number) getAttributeInternal(NUMOFSTATEPASSIVATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumOfStatePassivations.
     * @param value value to set the  NumOfStatePassivations
     */
    public void setNumOfStatePassivations(Number value) {
        setAttributeInternal(NUMOFSTATEPASSIVATIONS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NumOfInstancesReused.
     * @return the NumOfInstancesReused
     */
    public Number getNumOfInstancesReused() {
        return (Number) getAttributeInternal(NUMOFINSTANCESREUSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumOfInstancesReused.
     * @param value value to set the  NumOfInstancesReused
     */
    public void setNumOfInstancesReused(Number value) {
        setAttributeInternal(NUMOFINSTANCESREUSED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RefInstancesRecycled.
     * @return the RefInstancesRecycled
     */
    public Number getRefInstancesRecycled() {
        return (Number) getAttributeInternal(REFINSTANCESRECYCLED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RefInstancesRecycled.
     * @param value value to set the  RefInstancesRecycled
     */
    public void setRefInstancesRecycled(Number value) {
        setAttributeInternal(REFINSTANCESRECYCLED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnrefInstancesRecycled.
     * @return the UnrefInstancesRecycled
     */
    public Number getUnrefInstancesRecycled() {
        return (Number) getAttributeInternal(UNREFINSTANCESRECYCLED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnrefInstancesRecycled.
     * @param value value to set the  UnrefInstancesRecycled
     */
    public void setUnrefInstancesRecycled(Number value) {
        setAttributeInternal(UNREFINSTANCESRECYCLED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReferencedApplicationModules.
     * @return the ReferencedApplicationModules
     */
    public Number getReferencedApplicationModules() {
        return (Number) getAttributeInternal(REFERENCEDAPPLICATIONMODULES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReferencedApplicationModules.
     * @param value value to set the  ReferencedApplicationModules
     */
    public void setReferencedApplicationModules(Number value) {
        setAttributeInternal(REFERENCEDAPPLICATIONMODULES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NumOfSessions.
     * @return the NumOfSessions
     */
    public Number getNumOfSessions() {
        return (Number) getAttributeInternal(NUMOFSESSIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumOfSessions.
     * @param value value to set the  NumOfSessions
     */
    public void setNumOfSessions(Number value) {
        setAttributeInternal(NUMOFSESSIONS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvgNumOfSessionsRefState.
     * @return the AvgNumOfSessionsRefState
     */
    public Number getAvgNumOfSessionsRefState() {
        return (Number) getAttributeInternal(AVGNUMOFSESSIONSREFSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvgNumOfSessionsRefState.
     * @param value value to set the  AvgNumOfSessionsRefState
     */
    public void setAvgNumOfSessionsRefState(Number value) {
        setAttributeInternal(AVGNUMOFSESSIONSREFSTATE, value);
    }
}

